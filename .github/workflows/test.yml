name: Tests

on:
  push:
    branches:
      - master
      - mv3-chrome
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Run ESLint
        run: |
          # "--production" to skip installing devDependencies modules
          npm ci --production || exit 1
          make lint

  selenium:
    runs-on: ubuntu-22.04
    continue-on-error: true
    strategy:
      matrix:
        job: [firefox, firefox-beta, firefox-nightly, firefox-esr, edge-beta]
        include:
          - job: firefox
            BROWSER: "firefox"
            BROWSER_VERSION: "latest"
          - job: firefox-beta
            BROWSER: "firefox"
            BROWSER_VERSION: "latest-beta"
          - job: firefox-nightly
            BROWSER: "firefox"
            BROWSER_VERSION: "latest-nightly"
          - job: firefox-esr
            BROWSER: "firefox"
            BROWSER_VERSION: "latest-esr"
          - job: edge-beta
            BROWSER: "microsoft-edge-beta"
            BROWSER_VERSION: "beta"
          - job: chrome
            BROWSER: "google-chrome-stable"
            BROWSER_VERSION: "stable"
          - job: chrome-beta
            BROWSER: "google-chrome-beta"
            BROWSER_VERSION: "beta"
          - job: chrome-dev
            BROWSER: "google-chrome-dev"
            BROWSER_VERSION: "dev"
    env:
      BROWSER: ${{ matrix.BROWSER }}
    name:
      ${{ matrix.job }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: pip install -r tests/requirements.txt

      - name: Set up Firefox
        if: ${{ matrix.BROWSER == 'firefox' }}
        uses: browser-actions/setup-firefox@v1
        with:
          firefox-version: ${{ matrix.BROWSER_VERSION }}

      - name: Install Geckodriver
        if:  ${{ matrix.BROWSER == 'firefox' }}
        run: ./scripts/geckodriver.sh

      - name: Set up Edge
        if: ${{ matrix.BROWSER == 'microsoft-edge-beta' }}
        uses: browser-actions/setup-edge@v1
        with:
          edge-version: ${{ matrix.BROWSER_VERSION }}

      - name: Install Edge WebDriver
        if: ${{ matrix.BROWSER == 'microsoft-edge-beta' }}
        run: ./scripts/edge_webdriver.sh

      - name: Set up Node.js
        if: ${{ contains(matrix.BROWSER, 'chrome') }}
        uses: actions/setup-node@v4

      - name: Install Chrome/ChromeDriver
        if: ${{ contains(matrix.BROWSER, 'chrome') }}
        run: |
          npx @puppeteer/browsers install chrome@${{ matrix.BROWSER_VERSION }}
          npx @puppeteer/browsers install chromedriver@${{ matrix.BROWSER_VERSION }}

      - name: Get Chrome/ChromeDriver paths
        if: ${{ contains(matrix.BROWSER, 'chrome') }}
        run: |
          echo "CHROME_BINARY=$(npx @puppeteer/browsers list | head -n 1 | cut -d ' ' -f 3)" >> "$GITHUB_ENV"
          echo "CHROMEDRIVER_BINARY=$(npx @puppeteer/browsers list | tail -n 1 | cut -d ' ' -f 3)" >> "$GITHUB_ENV"

      - name: Make Chrome/ChromeDriver symlinks
        if: ${{ contains(matrix.BROWSER, 'chrome') }}
        run: |
          sudo ln -s ${{ env.CHROME_BINARY }} /usr/local/bin/${{ matrix.BROWSER }}
          sudo ln -s ${{ env.CHROMEDRIVER_BINARY }} /usr/local/bin/chromedriver

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      - name: Run Selenium tests
        run: |
          type "$BROWSER" >/dev/null 2>&1 || {
            echo "$BROWSER seems to be missing!"
            exit 1
          }
          echo "Found $("$BROWSER" --version)"
          xvfb-run --auto-servernum pytest --capture=no --color=yes --verbose --durations=10 tests/selenium
